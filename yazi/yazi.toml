[mgr]
ratio = [1, 4, 4]
sort_by = "natural"
linemode = "size"
show_hidden = false
scrolloff = 5

[preview]
wrap = "yes"
tab_size = 2
max_width = 3000
max_height = 4000

[opener]
# append_edit = [
# 	{ run = '${EDITOR:=vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
# 	{ run = 'subl "$@"', desc = "sublime", block = false, for = "unix" },
# ]
edit = [
	{ run = '${EDITOR:=vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
	{ run = 'code "%*"', orphan = true, desc = "code", for = "windows" },
	{ run = 'code -w "%*"', block = true, desc = "code (block)", for = "windows" },
]
open = [
	{ run = 'xdg-open "$@"', desc = "Open", for = "linux" },
	{ run = 'open "$@"', desc = "Open", for = "macos" },
	{ run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]
reveal = [
	{ run = 'open -R "$1"', desc = "Reveal", for = "macos" },
	{ run = 'explorer /select, "%1"', orphan = true, desc = "Reveal", for = "windows" },
	{ run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
image = [
	{ run = '/home/chin39/.local/share/flatpak/exports/bin/com.xnview.XnViewMP "$@"', orphan = true, desc = "Xnviewmp", for = "linux" },
]
extract = [
	{ run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
	{ run = 'ya pub extract --list %*', desc = "Extract here", for = "windows" },
]
play = [
	{ run = 'mpv "$@"', orphan = true, for = "unix" },
	{ run = '/mnt/d/tools/mpv-lazy/mpv.exe "$1"', dexc = "WSL mpv", orphan = true, for = "linux" },
	{ run = 'IINA "%1"', orphan = true, for = "macos" },
	{ run = 'mpv "%1"', orphan = true, for = "windows" },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]
view = [
	{ run = 'bat --pager "less -XR" "$@"', desc = "bat", block = true, for = "unix" },
]

[open]
rules = [
	# Folder
	{ name = "*/", use = [ "edit", "open", "reveal" ] },
	# Text
	{ mime = "text/*", use = [ "edit", "reveal" ] },
	# Image
	{ mime = "image/*", use = [ "open", "reveal" ] },
	# Media
	{ mime = "{audio,video}/*", use = [ "play", "reveal" ] },
	# Archive
	{ mime = "application/{001,zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", use = [ "extract", "reveal" ] },
	# JSON
	{ mime = "application/{json,ndjson}", use = [ "edit", "reveal" ] },
	{ mime = "*/javascript", use = [ "edit", "reveal" ] },
	# Empty file
	{ mime = "inode/empty", use = [ "edit", "reveal" ] },
	# Fallback
	{ name = "*", use = [ "open", "reveal", "edit" ] },
]


[plugin]
prefetchers = [
	# Mimetype
	{ name = "*", cond = "!mime", run = "mime", prio = "high" },
]
prepend_previewers = [
	# Archive previewer
	{ mime = "application/*zip", run = "ouch" },
	{ mime = "application/x-tar", run = "ouch" },
	{ mime = "application/x-bzip2", run = "ouch" },
	{ mime = "application/x-7z-compressed", run = "ouch" },
	{ mime = "application/x-rar", run = "ouch" },
	{ mime = "application/x-xz", run = "ouch" },
]
append_previewers = [{ name = "*", run = "hexyl" }]

[[plugin.prepend_fetchers]]
id = "mime"
if = "!mime"
name = "*"
run = "mime-ext"
prio = "high"

[[plugin.prepend_fetchers]]
id = "git"
name = "*"
run = "git"

[[plugin.prepend_fetchers]]
id = "git"
name = "*/"
run = "git"
